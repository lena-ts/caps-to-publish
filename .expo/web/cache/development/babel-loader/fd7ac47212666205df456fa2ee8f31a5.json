{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { categoriesData } from \"../data/categoriesData\";\nimport { ADD_ITEM } from \"../types\";\nexport var initialState = categoriesData;\nexport var categoriesReducer = function categoriesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_ITEM:\n      return _objectSpread({}, state.map(function (item) {\n        if (item.id === action.item.category) {\n          item.subcategories.map(function (i) {\n            if (i.id === action.item.type) {\n              i.items.push(action.item.id);\n            }\n          });\n        }\n\n        return item;\n      }));\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/admin/PROJECTS/LOOK/dev/src/store/reducers/categories.js"],"names":["categoriesData","ADD_ITEM","initialState","categoriesReducer","state","action","type","map","item","id","category","subcategories","i","items","push"],"mappings":";;;;;;AAAA,SAAQA,cAAR;AACA,SAAQC,QAAR;AAEA,OAAO,IAAMC,YAAY,GAAGF,cAArB;AAEP,OAAO,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC/D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKL,QAAL;AAGI,+BACOG,KAAK,CAACG,GAAN,CAAU,UAAAC,IAAI,EAAI;AACjB,YAAIA,IAAI,CAACC,EAAL,KAAYJ,MAAM,CAACG,IAAP,CAAYE,QAA5B,EAAsC;AAClCF,UAAAA,IAAI,CAACG,aAAL,CAAmBJ,GAAnB,CAAuB,UAAAK,CAAC,EAAI;AACxB,gBAAGA,CAAC,CAACH,EAAF,KAASJ,MAAM,CAACG,IAAP,CAAYF,IAAxB,EAA8B;AAC1BM,cAAAA,CAAC,CAACC,KAAF,CAAQC,IAAR,CAAaT,MAAM,CAACG,IAAP,CAAYC,EAAzB;AAEH;AAEJ,WAND;AAOH;;AACD,eAAOD,IAAP;AACH,OAXE,CADP;;AAcJ;AAAS,aAAOJ,KAAP;AAlBb;AAoBH,CArBM","sourcesContent":["import {categoriesData} from \"../data/categoriesData\";\nimport {ADD_ITEM} from \"../types\";\n\nexport const initialState = categoriesData\n\nexport const categoriesReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case ADD_ITEM:\n            // const category = action.item.category\n            // const category = state.categories.find(p => p.id === action.item.category)\n            return {\n                ...state.map(item => {\n                    if (item.id === action.item.category) {\n                        item.subcategories.map(i => {\n                            if(i.id === action.item.type) {\n                                i.items.push(action.item.id)\n                                // i.items = [...i.items, {...action.item.id}]\n                            }\n                            // return i\n                        })\n                    }\n                    return item\n                })\n            }\n        default: return state\n    }\n}"]},"metadata":{},"sourceType":"module"}