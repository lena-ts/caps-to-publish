{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { categoriesData } from \"../data/categoriesData\";\nimport { ADD_ITEM } from \"../types\";\nexport var initialState = categoriesData;\nexport var categoriesReducer = function categoriesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_ITEM:\n      var category = state.categories.find(function (p) {\n        return p.id === action.item.category;\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        categories: [].concat(_toConsumableArray(state.categories), [_objectSpread({}, action.item)])\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/admin/PROJECTS/LOOK/dev/src/store/reducers/categories.js"],"names":["categoriesData","ADD_ITEM","initialState","categoriesReducer","state","action","type","category","categories","find","p","id","item"],"mappings":";;;;;;;AAAA,SAAQA,cAAR;AACA,SAAQC,QAAR;AAEA,OAAO,IAAMC,YAAY,GAAGF,cAArB;AAEP,OAAO,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC/D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKL,QAAL;AAEI,UAAMM,QAAQ,GAAGH,KAAK,CAACI,UAAN,CAAiBC,IAAjB,CAAsB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,EAAF,KAASN,MAAM,CAACO,IAAP,CAAYL,QAAzB;AAAA,OAAvB,CAAjB;AACA,6CACOH,KADP;AAEII,QAAAA,UAAU,+BAAMJ,KAAK,CAACI,UAAZ,sBAA4BH,MAAM,CAACO,IAAnC;AAFd;;AAIJ;AAAS,aAAOR,KAAP;AARb;AAUH,CAXM","sourcesContent":["import {categoriesData} from \"../data/categoriesData\";\nimport {ADD_ITEM} from \"../types\";\n\nexport const initialState = categoriesData\n\nexport const categoriesReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case ADD_ITEM:\n            // const category = action.item.category\n            const category = state.categories.find(p => p.id === action.item.category)\n            return {\n                ...state,\n                categories: [...state.categories, {...action.item}]\n            }\n        default: return state\n    }\n}"]},"metadata":{},"sourceType":"module"}