{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/admin/PROJECTS/LOOK/dev/src/components/AddItemModal.js\";\n\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React, { useEffect, useState } from \"react\";\nimport { Shade } from \"./ui/Shade\";\nimport { DoneTopButton } from \"./ui/buttons/DoneTopButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addItem, setAddItemModal } from \"../store/actions\";\nimport { TopActions } from \"./ui/buttons/TopActions\";\nexport var AddItemModal = function AddItemModal(_ref) {\n  var img = _ref.img;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalMain = _useState2[0],\n      setModal = _useState2[1];\n\n  var modalVisbility = useSelector(function (state) {\n    return state.settings.addItemModal;\n  });\n  var items = useSelector(function (state) {\n    return state.items;\n  });\n  useEffect(function () {\n    if (modalVisbility) {\n      setModal(true);\n    } else {\n      setModal(false);\n    }\n  }, [modalVisbility]);\n\n  var handleDone = function handleDone() {\n    var item = {\n      brand: \"\",\n      img: img,\n      color: \"\",\n      type: \"\",\n      category: \"\"\n    };\n    dispatch(setAddItemModal(false));\n    dispatch(addItem(item));\n  };\n\n  console.log('ITEMS', items.items);\n  return React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: false,\n    visible: modalMain,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, React.createElement(TopActions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), React.createElement(DoneTopButton, {\n    pressDone: handleDone,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  })), React.createElement(ImageBackground, {\n    source: {\n      uri: img\n    },\n    style: styles.image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 18\n    }\n  }, \"It modal\"), React.createElement(Shade, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  })));\n};\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%'\n  }\n});","map":{"version":3,"sources":["/Users/admin/PROJECTS/LOOK/dev/src/components/AddItemModal.js"],"names":["React","useEffect","useState","Shade","DoneTopButton","useDispatch","useSelector","addItem","setAddItemModal","TopActions","AddItemModal","img","dispatch","modalMain","setModal","modalVisbility","state","settings","addItemModal","items","handleDone","item","brand","color","type","category","console","log","uri","styles","image","StyleSheet","create","flex","alignItems","justifyContent","width","height"],"mappings":";;;;;;;;;;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,KAAR;AACA,SAAQC,aAAR;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,OAAR,EAAiBC,eAAjB;AACA,SAAQC,UAAR;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAW;AAAA,MAATC,GAAS,QAATA,GAAS;AACnC,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AADmC,kBAELH,QAAQ,CAAC,KAAD,CAFH;AAAA;AAAA,MAE5BW,SAF4B;AAAA,MAEjBC,QAFiB;;AAGnC,MAAMC,cAAc,GAAGT,WAAW,CAAC,UAAAU,KAAK;AAAA,WAAIA,KAAK,CAACC,QAAN,CAAeC,YAAnB;AAAA,GAAN,CAAlC;AACA,MAAMC,KAAK,GAAGb,WAAW,CAAC,UAAAU,KAAK;AAAA,WAAIA,KAAK,CAACG,KAAV;AAAA,GAAN,CAAzB;AAEAlB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIc,cAAJ,EAAoB;AAChBD,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAFD,MAGK;AACDA,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACH;AACJ,GAPQ,EAON,CAACC,cAAD,CAPM,CAAT;;AASA,MAAMK,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,QAAIC,IAAI,GAAG;AACPC,MAAAA,KAAK,EAAE,EADA;AAEPX,MAAAA,GAAG,EAAEA,GAFE;AAGPY,MAAAA,KAAK,EAAE,EAHA;AAIPC,MAAAA,IAAI,EAAE,EAJC;AAKPC,MAAAA,QAAQ,EAAE;AALH,KAAX;AAOAb,IAAAA,QAAQ,CAACJ,eAAe,CAAC,KAAD,CAAhB,CAAR;AACAI,IAAAA,QAAQ,CAACL,OAAO,CAACc,IAAD,CAAR,CAAR;AACH,GAVD;;AAYAK,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBR,KAAK,CAACA,KAA3B;AACA,SACI,oBAAC,KAAD;AACI,IAAA,aAAa,EAAC,OADlB;AAEI,IAAA,WAAW,EAAE,KAFjB;AAGI,IAAA,OAAO,EAAEN,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAEO,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CALJ,EASI,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAE;AAAEQ,MAAAA,GAAG,EAAEjB;AAAP,KAAzB;AAAuC,IAAA,KAAK,EAAEkB,MAAM,CAACC,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADL,EAEI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CATJ,CADJ;AAgBH,CA5CM;AA8CP,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,KAAK,EAAE;AACHG,IAAAA,IAAI,EAAE,CADH;AAEHC,IAAAA,UAAU,EAAE,QAFT;AAGHC,IAAAA,cAAc,EAAE,QAHb;AAIHC,IAAAA,KAAK,EAAE,MAJJ;AAKHC,IAAAA,MAAM,EAAE;AALL;AADsB,CAAlB,CAAf","sourcesContent":["import {Modal, Text, View, ImageBackground, StyleSheet} from \"react-native\";\nimport React, {useEffect, useState} from \"react\";\nimport {Shade} from \"./ui/Shade\";\nimport {DoneTopButton} from \"./ui/buttons/DoneTopButton\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addItem, setAddItemModal} from \"../store/actions\";\nimport {TopActions} from \"./ui/buttons/TopActions\";\n\nexport const AddItemModal = ({img}) => {\n    const dispatch = useDispatch()\n    const [modalMain, setModal] = useState(false)\n    const modalVisbility = useSelector(state => state.settings.addItemModal)\n    const items = useSelector(state => state.items)\n\n    useEffect(() => {\n        if (modalVisbility) {\n            setModal(true)\n        }\n        else {\n            setModal(false)\n        }\n    }, [modalVisbility])\n\n    const handleDone = () => {\n        let item = {\n            brand: \"\",\n            img: img,\n            color: \"\",\n            type: \"\",\n            category: \"\"\n        }\n        dispatch(setAddItemModal(false))\n        dispatch(addItem(item))\n    }\n\n    console.log('ITEMS', items.items)\n    return(\n        <Modal\n            animationType=\"slide\"\n            transparent={false}\n            visible={modalMain}\n        >\n            <TopActions>\n                <View></View>\n                <DoneTopButton pressDone={handleDone}/>\n            </TopActions>\n            <ImageBackground source={{ uri: img }} style={styles.image}>\n                 <Text>It modal</Text>\n                <Shade/>\n            </ImageBackground>\n        </Modal>\n    )\n}\n\nconst styles = StyleSheet.create({\n    image: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n        height: '100%'\n    }\n})"]},"metadata":{},"sourceType":"module"}